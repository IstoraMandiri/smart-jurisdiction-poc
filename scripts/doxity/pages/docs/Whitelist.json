{"author":"Chris Hitchcott","title":"Whitelist","fileName":"/contracts/Whitelist.sol","name":"Whitelist","abi":[{"constant":false,"inputs":[{"name":"_address","type":"address"},{"name":"_value","type":"bool"}],"name":"set","outputs":[{"name":"_success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"whitelist","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"}],"source":"pragma solidity ^0.4.16;\n\nimport 'zeppelin-solidity/contracts/ownership/Ownable.sol';\n\n/// @title Whitelist\n/// @notice A simple ownable registry mapping addressess to a bool\n/// @author Chris Hitchcott\n\ncontract Whitelist is Ownable {\n\n  // TODO events\n  mapping(address => bool) public whitelist;\n\n  /// @notice Updates the registry\n  /// @dev Can only be called by admin\n  /// @param _address address Address to update\n  /// @param _value bool New value\n  /// @return _success bool Transaction was successful\n  function set(address _address, bool _value) onlyOwner public returns (bool _success) {\n    whitelist[_address] = _value;\n    return true;\n  }\n\n  // TODO enable the following for conveneince\n  /*\n  function setMany(address[] _addresses, bool[] _values) onlyOwner public returns (bool _success) {\n    for (uint8 i = 0; i < _addresses.length; i++) {\n      set(_address[i], _values[i]);\n    }\n    return true;\n  }\n\n  function getMany(address[] _addresses) public constant returns (bool[] _values) {\n    bool[] memory result = new bool[](_addresses.length);\n    for (uint8 i = 0; i < _addresses.length; i++) {\n      result[i] = whitelist[i];\n    }\n    return result;\n  }\n  */\n\n}\n","abiDocs":[{"constant":false,"inputs":[{"name":"_address","type":"address","description":"address Address to update"},{"name":"_value","type":"bool","description":"bool New value"}],"name":"set","outputs":[{"name":"_success","type":"bool","description":"bool Transaction was successful"}],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Can only be called by admin","return":"_success bool Transaction was successful","notice":"Updates the registry","signature":"set(address,bool)","signatureHash":"35e3b25a"},{"constant":true,"inputs":[],"name":"owner","payable":false,"stateMutability":"view","type":"function","signature":"owner()","signatureHash":"8da5cb5b"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"whitelist","payable":false,"stateMutability":"view","type":"function","signature":"whitelist(address)","signatureHash":"9b19251a"},{"constant":false,"inputs":[{"name":"newOwner","type":"address","description":"The address to transfer ownership to."}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Allows the current owner to transfer control of the contract to a newOwner.","signature":"transferOwnership(address)","signatureHash":"f2fde38b"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event","signature":"OwnershipTransferred(address,address)","signatureHash":"8be0079c"}]}
